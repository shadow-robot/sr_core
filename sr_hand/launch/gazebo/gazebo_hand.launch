<launch>
  <arg name="paused" default="false" />
  <arg name="use_sim_time" default="true" />
  <arg name="gui" default="true" />
  <arg name="headless" default="false" />
  <arg name="debug" default="false" />
  <arg name="verbose" default="true" />
  <arg name="hand_id" default="rh" />
  <arg name="hand_serial" default="1234"/>  
  
  <param name="/hand/mapping/$(arg hand_serial)" value="$(arg hand_id)"/>
  <param name="/hand/joint_prefix/$(arg hand_serial)" value="$(arg hand_id)_"/>

  <!-- Gazebo world file to load. -->
  <arg name="world_name" value="$(find sr_description_common)/worlds/shadowhand.world"/>
  <!-- Set to 0 if the hand description will not be specified with the argument hand_description. In which case it depends on the environment variables -->
  <arg name="set_hand_description" default="0" />
  <!-- Xacro file containing the robot description we want to load. Only taken into acount if the set_description arg is set to 1
       the default value -->
  <arg name="hand_description"
  default="$(find sr_description)/robots/shadowhand_motor.urdf.xacro" />
  <!-- We want gazebo to stay in the root namespace but the nodes below to be
  relative. Can then launch this inside a namespace to namespace the hand. -->
  <group ns="/">
    <!-- We reuse the logic in empty_world.launch, changing only the name of the world to be launched -->
    <include file="$(find gazebo_ros)/launch/empty_world.launch">
      <arg name="paused" value="$(arg paused)" />
      <arg name="use_sim_time" value="$(arg use_sim_time)" />
      <arg name="gui" value="$(arg gui)" />
      <arg name="headless" value="$(arg headless)" />
      <arg name="debug" value="$(arg debug)" />
      <arg name="verbose" value="$(arg verbose)" />
      <arg name="world_name" value="$(arg world_name)" />
    </include>
  </group>
  <!-- The real hand uses sh_description but getting gazebo to work
  properly with that is a pain as it needs robotParam set in the urdf and
  various bits of mapping. The arm uses robot_description as does that arm
  and hand. So we just set both params and stop fighting! -->
  <group unless="$(arg set_hand_description)">
    <!-- Loads the correct robot description depending on the environment variables -->
    <include file="$(find sr_description)/loaders/load_hand_model.launch">

      <arg name="robot_param" value="sh_description" />
    </include>
    <include file="$(find sr_description)/loaders/load_hand_model.launch">

      <arg name="robot_param" value="robot_description" />
    </include>
  </group>
  <group if="$(arg set_hand_description)">
    <!-- Loads the robot description from the file passed as an argument -->
    <param name="sh_description"
    command="xacro --inorder '$(arg hand_description)'" />
    <param name="robot_description"
    command="xacro --inorder '$(arg hand_description)'" />
  </group>
  <node name="spawn_hand" pkg="gazebo_ros" type="spawn_model"
  args="-urdf -param sh_description -z 0.01 -model shadow_model"
  respawn="false" output="screen" />
  <!-- Controllers for the hand -->
  <include file="$(find sr_hand)/launch/gazebo/loaders/hand_controllers.launch" >
    <arg name="hand_id" value="$(arg hand_id)" />
  </include>
  <include file="$(find ros_ethercat_model)/launch/joint_state_publisher.launch" />
  <node pkg="robot_state_publisher" type="robot_state_publisher"
  name="robot_state_publisher_full_pos">
    <param name="publish_frequency" type="double" value="20.0" />
  </node>
</launch>
